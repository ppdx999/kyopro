// Code generated by MockGen. DO NOT EDIT.
// Source: port_out.go

// Package atcoder_test is a generated GoMock package.
package atcoder_test

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlOpner is a mock of UrlOpner interface.
type MockUrlOpner struct {
	ctrl     *gomock.Controller
	recorder *MockUrlOpnerMockRecorder
}

// MockUrlOpnerMockRecorder is the mock recorder for MockUrlOpner.
type MockUrlOpnerMockRecorder struct {
	mock *MockUrlOpner
}

// NewMockUrlOpner creates a new mock instance.
func NewMockUrlOpner(ctrl *gomock.Controller) *MockUrlOpner {
	mock := &MockUrlOpner{ctrl: ctrl}
	mock.recorder = &MockUrlOpnerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlOpner) EXPECT() *MockUrlOpnerMockRecorder {
	return m.recorder
}

// OpenUrl mocks base method.
func (m *MockUrlOpner) OpenUrl(url string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "OpenUrl", url)
	ret0, _ := ret[0].(error)
	return ret0
}

// OpenUrl indicates an expected call of OpenUrl.
func (mr *MockUrlOpnerMockRecorder) OpenUrl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "OpenUrl", reflect.TypeOf((*MockUrlOpner)(nil).OpenUrl), url)
}
